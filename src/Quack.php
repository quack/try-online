<?php

function args_have()
{
  global $argv;
  return count(array_intersect($argv, func_get_args())) > 0;
}

function no_args()
{
  global $argv;
  return count($argv) === 1;
}

function quack()
{
  if (no_args() || args_have('-h', '--help')) {
    help();
    return;
  }
}

function help()
{
  echo <<<TEXT
Usage: ./quack [options] [.qk files]

Common:
  -v,  --version                    Prints version and exits
  -h,  --help                       Displays this help message
  -l,  --lexer                      Prints the tokens produced by the lexer
  -a,  --ast                        Prints the syntax tree the parser produces
  -nh, --no-headers                 Does not add "Generated by" header
  -o,  --output <path>              Compiles into the specified directory
  -e,  --eval <code>                Evaluates code on command line
  -r,  --repl                       Starts the REPL to evaluate the expressions
  -ne, --no-evaluate                Starts the REPL without evaluating expressions
  -s,  --start                      Runs a .qk file
  -nw, --no-warnings                Disables all warnings
  -op, --optimize                   Enables code optimization on generated code

Target:
  --python                          Compiles to Python
  --php                             Compiles to PHP
  --es5                             Compiles to ECMAScript 5
  --es6                             Compiles to ECMAScript 6
  --clojure                         Compiles to Clojure
  --lisp                            Compiles to Common Lisp
  --hy                              Compiles to Hy
  --jvm                             Compiles to JVM bytecode
  --cpp                             Compiles to C++ (using template-metaprogramming)
  --plug <backend>                  Plugs your own backend

TEXT
;
}

quack();
